---
- name: rollback and provision director vm
  hosts: localhost
  
  tasks:
    - name: provision a vm
      vmware_guest:
        hostname: "{{ lookup('ini', 'vcenter_address section=director file=settings.ini')}}"
        username: "{{ lookup('ini', 'vcenter_user section=director file=settings.ini') }}"
        password: "{{ lookup('ini', 'vcenter_pass section=director file=settings.ini') }}"
        validate_certs: no
        datacenter: "{{ lookup('ini', 'vcenter_datacenter section=director file=settings.ini') }}"
        esxi_hostname: "{{ lookup('ini', 'vcenter_esxi section=director file=settings.ini') }}"
        name: "{{ lookup('ini', 'vm_name section=director file=settings.ini') }}"
        template: "{{ lookup('ini', 'vm_template section=director file=settings.ini') }}"
        networks:
          - name: "{{ lookup('ini', 'vm_public_pg section=director file=settings.ini') }}"
            ip: "{{ lookup('ini', 'vm_public_ip section=director file=settings.ini') }}"
            netmask: "{{ lookup('ini', 'vm_public_netmask section=director file=settings.ini') }}"
            gateway: "{{ lookup('ini', 'vm_public_gw section=director file=settings.ini') }}"
          - name: "{{ lookup('ini', 'vm_private_pg section=director file=settings.ini') }}"
            ip: "{{ lookup('ini', 'vm_private_ip section=director file=settings.ini') }}"
            netmask: "{{ lookup('ini', 'vm_public_netmask section=director file=settings.ini') }}"
        customization:
          hostname: "{{ lookup('ini', 'vm_hostname section=director file=settings.ini') }}"
          password: "{{ lookup('ini', 'vm_password section=director file=settings.ini') }}"
        state: present

    - name: power on the vm
      vmware_guest:
        hostname: "{{ lookup('ini', 'vcenter_address section=director file=settings.ini')}}"
        username: "{{ lookup('ini', 'vcenter_user section=director file=settings.ini') }}"
        password: "{{ lookup('ini', 'vcenter_pass section=director file=settings.ini') }}"
        validate_certs: no
        datacenter: "{{ lookup('ini', 'vcenter_datacenter section=director file=settings.ini') }}"
        name: "{{ lookup('ini', 'vm_name section=director file=settings.ini') }}"
        state: poweredon
        wait_for_ip_address: yes
      delegate_to: localhost

    - name: remove the vm
      vmware_guest:
        hostname: "{{ lookup('ini', 'vcenter_address section=director file=settings.ini')}}"
        username: "{{ lookup('ini', 'vcenter_user section=director file=settings.ini') }}"
        password: "{{ lookup('ini', 'vcenter_pass section=director file=settings.ini') }}"
        validate_certs: no
        datacenter: "{{ lookup('ini', 'vcenter_datacenter section=director file=settings.ini') }}"
        name: "{{ lookup('ini', 'vm_name section=director file=settings.ini') }}"
        state: absent

- name: initialize director
  hosts: director

  tasks:
    - name: preare stack user
      block:
        - name: add user stack
          user:
            name: stack
            password: "{{ lookup('ini', 'vm_password section=director file=settings.ini') | password_hash('sha512') }}"

        - name: passwordless sudo for user stack
          template:
            src: tempaltes/sudoers.stack
            dest: /etc/sudoers.d/stack
            mode: 0440

    - name: TBD - configure network such as bridge ???
      block:
        - name: set hostname
          shell: |
            hostnamectl set-hostname {{ vm_public_fqdn }}
            hostnamectl set-hostname --transient {{ vm_public_fqdn }}

        - name: update hosts
          vars:
            ip: "{{ lookup('ini', 'vm_public_ip section=director file=settings.ini') }}"
            hostname: "{{ lookup('ini', 'vm_hostname section=director file=settings.ini') }}"
            fqdn: "{{ lookup('ini', 'vm_fqdn section=director file=settings.ini') }}"
          template:
            src: templates/hosts
            dest: /etc/hosts

    - name: prepare director
      block:
        - name: create requried directories
          file:
            path: "{{ item }}"
            state: directory
          with_items:
            - images
            - templates
      become: yes
      become_user: stack
      become_method: su
