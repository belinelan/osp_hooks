---
- name: rollback and provision director vm
  hosts: localhost
  tags: ['provision']

  tasks:
    - name: provision a vm
      vmware_guest:
        hostname: "{{ lookup('ini', 'vcenter_address section=director file=settings.ini')}}"
        username: "{{ lookup('ini', 'vcenter_user section=director file=settings.ini') }}"
        password: "{{ lookup('ini', 'vcenter_pass section=director file=settings.ini') }}"
        validate_certs: no
        datacenter: "{{ lookup('ini', 'vcenter_datacenter section=director file=settings.ini') }}"
        esxi_hostname: "{{ lookup('ini', 'vcenter_esxi section=director file=settings.ini') }}"
        name: "{{ lookup('ini', 'vm_name section=director file=settings.ini') }}"
        template: "{{ lookup('ini', 'vm_template section=director file=settings.ini') }}"
        networks:
          - name: "{{ lookup('ini', 'vm_public_pg section=director file=settings.ini') }}"
            ip: "{{ lookup('ini', 'vm_public_ip section=director file=settings.ini') }}"
            netmask: "{{ lookup('ini', 'vm_public_netmask section=director file=settings.ini') }}"
            gateway: "{{ lookup('ini', 'vm_public_gw section=director file=settings.ini') }}"
          - name: "{{ lookup('ini', 'vm_private_pg section=director file=settings.ini') }}"
            ip: "{{ lookup('ini', 'vm_private_ip section=director file=settings.ini') }}"
            netmask: "{{ lookup('ini', 'vm_public_netmask section=director file=settings.ini') }}"
        customization:
          hostname: "{{ lookup('ini', 'vm_hostname section=director file=settings.ini') }}"
          password: "{{ lookup('ini', 'vm_password section=director file=settings.ini') }}"
        state: present

    - name: power on the vm
      vmware_guest:
        hostname: "{{ lookup('ini', 'vcenter_address section=director file=settings.ini')}}"
        username: "{{ lookup('ini', 'vcenter_user section=director file=settings.ini') }}"
        password: "{{ lookup('ini', 'vcenter_pass section=director file=settings.ini') }}"
        validate_certs: no
        datacenter: "{{ lookup('ini', 'vcenter_datacenter section=director file=settings.ini') }}"
        name: "{{ lookup('ini', 'vm_name section=director file=settings.ini') }}"
        state: poweredon
        wait_for_ip_address: yes
      delegate_to: localhost

    - name: remove the vm
      vmware_guest:
        hostname: "{{ lookup('ini', 'vcenter_address section=director file=settings.ini')}}"
        username: "{{ lookup('ini', 'vcenter_user section=director file=settings.ini') }}"
        password: "{{ lookup('ini', 'vcenter_pass section=director file=settings.ini') }}"
        validate_certs: no
        datacenter: "{{ lookup('ini', 'vcenter_datacenter section=director file=settings.ini') }}"
        name: "{{ lookup('ini', 'vm_name section=director file=settings.ini') }}"
        state: absent
      tags: ['teardown']

- name: prepare undercloud
  hosts: director
  tags: ['undercloud']

  tasks:
    - name: preare stack user
      block:
        - name: add user stack
          user:
            name: stack
            password: "{{ lookup('ini', 'vm_password section=director file=settings.ini') | password_hash('sha512') }}"

        - name: passwordless sudo for user stack
          template:
            src: templates/sudoers.stack
            dest: /etc/sudoers.d/stack
            mode: 0440

        - name: create requried directories
          file:
            path: "{{ item }}"
            state: directory
          with_items:
            - images
            - templates
          become: yes
          become_user: stack
          become_method: su

    - name: configure system
      vars:
        vm_fqdn: "{{ lookup('ini', 'vm_fqdn section=director file=settings.ini') }}"
      block:
        - name: set hostname
          shell: |
            hostnamectl set-hostname {{ vm_fqdn }}
            hostnamectl set-hostname --transient {{ vm_fqdn }}

        - name: update hosts
          vars:
            ip: "{{ lookup('ini', 'vm_public_ip section=director file=settings.ini') }}"
            hostname: "{{ lookup('ini', 'vm_hostname section=director file=settings.ini') }}"
            fqdn: "{{ vm_fqdn }}"
          template:
            src: templates/hosts
            dest: /etc/hosts

        - name: register system
          tags: ['run']
          shell: |
            subscription-manager register \
              --username {{ lookup('ini', 'subscription_user section=undercloud file=settings.ini') }}\
              --password {{ lookup('ini', 'subscription_pass section=undercloud file=settings.ini') }}
            subscription-manager refresh
            IFS="\n"
            for pool in $(echo {{ lookup('ini', 'osp_pools section=undercloud file=settings.ini') }} | tr "," "\n" | sed -e 's/^ \+//'); do
              subscription-manager attach --pool=$(
                  subscription-manager list --available --all | grep '^\(Subscription Name:\|Pool ID:\)' |\
                    sed -ne "/${pool}/{n;s/[ \t]\+//g;p}" |\
                    cut -d':' -f2
              )
            done
            subscription-manager repos --disable=*
            for repo in $(echo {{ lookup('ini', 'sys_repos section=undercloud file=settings.ini') }} | tr "," "\n" | sed -e 's/^ \+//'); do
              subscription-manager repos --enable=${repo}
            done
            yum update -y
            #shutdown -r now

        #- name: Wait for OS come back online
        #  wait_for_connection:
        #    delay: 60
        #    timeout: 300

        - name: install director pacakges
          yum:
            name: python-tripleoclient
            state: present

        - name: configure director
          shell: |
            cp /usr/share/instack-undercloud/undercloud.conf.sample ~/undercloud.conf
            sed -i "s/^local_ip.*/local_ip = {{ lookup(ini, 'local_ip section=undercloud file=settings.ini') }}/; \
                    s/^network_gateway.*/network_gateway = {{ lookup(ini, 'network_gateway section=undercloud file=settings.ini') }}/; \
                    s/^local_interface.*/local_interface = {{ lookup(ini, 'local_interface section=undercloud file=settings.ini') }}/; \
                    s/^network_cidr.*/network_cidr = {{ lookup(ini, 'network_cidr section=undercloud file=settings.ini') }}/; \
                    s/^masquerade_network.*/masquerade_network = {{ lookup(ini, 'masquerade_network section=undercloud file=settings.ini') }}/; \
                    s/^dhcp_start.*/dhcp_start = {{ lookup(ini, 'dhcp_start section=undercloud file=settings.ini') }}/; \
                    s/^dhcp_end.*/dhcp_end = {{ lookup(ini, 'dhcp_end section=undercloud file=settings.ini') }}/; \
                    s/^inspection_iprange.*/inspection_iprange = {{ lookup(ini, 'inspection_iprange section=undercloud file=settings.ini') }}/;" \
            undercloud.conf
            openstack undercloud install
          become: yes
          become_user: stack
          become_method: su
